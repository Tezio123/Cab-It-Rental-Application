/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.108
 * Generated at: 2021-05-20 08:37:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.customer;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cabit.Cab_It.model.Customer;
import java.util.Base64;
import com.cabit.Cab_It.helper.AccessPrivilegeHelper;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t    <meta charset=\"UTF-8\">\r\n");
      out.write("\t    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("\t    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("\t\t<title>Customer Profile</title>\r\n");
      out.write("\t    <link rel=\"stylesheet\" href=\"CSS/style3.css\">\r\n");
      out.write("\t    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("\t    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\t    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">    \r\n");
      out.write("\t    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\t</head>\r\n");
      out.write("\r\n");
      out.write("\t<body>\r\n");
      out.write("\t    ");

	        if(session.getAttribute("logged-customer") == null)
	        {
	            response.sendRedirect("/Cab_It/login");
	            return;
	        }
	
	        Customer loggedCustomer = (Customer) session.getAttribute("logged-customer");
	        loggedCustomer.setDerivedAttributes();
	
	        AccessPrivilegeHelper accessPrivilegeHelper = new AccessPrivilegeHelper();
	
	        if (!accessPrivilegeHelper.checkAccessPrivilegesForCustomer(loggedCustomer, "read")) {
	            response.sendRedirect("/Cab_It/error/no-access.jsp");
	            return;
	        }
	
	    
      out.write("\r\n");
      out.write("\t    <div class=\"head-te\">\r\n");
      out.write("\t    \t<h2>Your Profile Here</h2>\r\n");
      out.write("\t    \t\r\n");
      out.write("\t    ");

	        if(session.getAttribute("customer-delete-status") != null)
	        {
	            if(session.getAttribute("customer-delete-status").toString().equals("invalid"))
	            {
	                out.println("<font color='red'>");
	                out.println("<br><h4>Your account is unable to delete. Try again later!</h4>");
	                out.println("</font>");
	            }
	            session.removeAttribute("customer-delete-status");
	        }
	    
      out.write("\r\n");
      out.write("\t    \r\n");
      out.write("\t    ");

	        Object customerUpdateStatus = session.getAttribute("customer-update-status");
	
	        if(customerUpdateStatus != null)
	        {
	            if(customerUpdateStatus.toString().equals("success"))
	            {
	                out.println("<font color='blue'>");
	                out.println("<br><h4>Account Updated Successfully!</h4>");
	                out.println("</font>");
	            }
	            session.removeAttribute("customer-update-status");
	        }
	    
      out.write("\r\n");
      out.write("\t    \r\n");
      out.write("\t    </div>\r\n");
      out.write("\t\r\n");
      out.write("\t    ");

	        String titleTemplate = "<h3>%s</h3>";
	        String imageTemplate = "<img src='%s'><br>";
	        String fieldTemplate = "<p> <b>%s</b>  : %s </p>";
	        String hyperlinkTemplate = "<a href='%s'>%s</a>";
	
	        String id = loggedCustomer.getId();
	        String fullName = loggedCustomer.getFirstName()
	                .concat(" ")
	                .concat(loggedCustomer.getMidName())
	                .concat(" ")
	                .concat(loggedCustomer.getLastName());
	        String username = loggedCustomer.getUsername();
	        String password = loggedCustomer.getPassword();
	        String nic = loggedCustomer.getNic();
	        String address = loggedCustomer.getAddressLine1()
	                .concat(", ")
	                .concat(loggedCustomer.getAddressLine2())
	                .concat(", ")
	                .concat(loggedCustomer.getAddressLine3());
	        String city = loggedCustomer.getCity();
	        String phone = loggedCustomer.getPhone();
	        String ageInYears = String.valueOf(loggedCustomer.getAgeInYears());
	        String gender = loggedCustomer.getGender().toString();
	        String dob = loggedCustomer.getDob().toString();
	        String photoUrl = "data:image/jpg;base64," + Base64.getEncoder().encodeToString(loggedCustomer.getPhoto());
			
	        out.println("<div class='row'>");
	        	out.println("<div class='column'>");
	        		out.println("<div class='card'>");
	        			out.println("<div class='image-btn'>");
	        				out.println(String.format(imageTemplate, photoUrl));
	        			out.println("</div>");
	        			out.println("<div class='container'>");
	        				out.println(String.format(titleTemplate, id));
					        out.println(String.format(fieldTemplate, "National Identity Card", nic));
					        out.println(String.format(fieldTemplate, "Username", username));
					        out.println(String.format(fieldTemplate, "Password", password));
					        out.println(String.format(fieldTemplate, "Name", fullName));
					        out.println(String.format(fieldTemplate, "Age", ageInYears));
					        out.println(String.format(fieldTemplate, "Gender", gender));
					        out.println(String.format(fieldTemplate, "Birthday", dob));
					        out.println(String.format(fieldTemplate, "Address", address));
					        out.println(String.format(fieldTemplate, "City", city));
					        out.println(String.format(fieldTemplate, "Phone", phone));
					        out.println(String.format(hyperlinkTemplate, "/Cab_It/update/customer", "<h4 id='signup-btn-2'>Update</h4>"));
					        out.println(String.format(hyperlinkTemplate, "/Cab_It/delete/customer", "<h4 id='signup-btn-3'>Delete</h4>"));
	        			out.println("</div>");
	        		out.println("</div>");
	        	out.println("</div>");
	        out.println("</div>");
	    
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t    <form action=\"/Cab_It/dashboard\">\r\n");
      out.write("        \t<input type=\"submit\" value=\"Dashboard\" id=\"signup-btn-1\">\r\n");
      out.write("    \t</form>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
