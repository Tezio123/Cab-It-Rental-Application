/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.108
 * Generated at: 2021-05-20 23:12:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.advertisement;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cabit.Cab_It.model.Advertisement;
import java.util.List;
import java.util.Base64;
import com.cabit.Cab_It.model.Admin;
import com.cabit.Cab_It.service.AdvertisementService;
import com.cabit.Cab_It.model.Customer;
import com.cabit.Cab_It.model.Employee;
import com.cabit.Cab_It.helper.AccessPrivilegeHelper;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <title>Advertisement Search</title>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("\t    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("\t    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("\t    <link rel=\"stylesheet\" href=\"CSS/style4.css\">\r\n");
      out.write("\t    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("\t    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\t    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">    \r\n");
      out.write("\t    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    </head>\r\n");
      out.write("\r\n");
      out.write("    <body>\r\n");
      out.write("\t    ");

	        if(session.getAttribute("logged-admin") == null &&
	                session.getAttribute("logged-employee") == null &&
	                session.getAttribute("logged-customer") == null)
	        {
	            response.sendRedirect("/Cab_It/login");
	            return;
	        }
	        AccessPrivilegeHelper accessPrivilegeHelper = new AccessPrivilegeHelper();
	
	        if(session.getAttribute("logged-admin") != null) {
	            Admin loggedAdmin = (Admin) session.getAttribute("logged-admin");
	
	            if (!accessPrivilegeHelper.checkAccessPrivilegesForAdvertisement(loggedAdmin, "read")) {
	                response.sendRedirect("/Cab_It/error/no-access.jsp");
	            }
	        }
	        else if(session.getAttribute("logged-customer") != null) {
	            Customer loggedCustomer = (Customer) session.getAttribute("logged-customer");
	
	            if (!accessPrivilegeHelper.checkAccessPrivilegesForAdvertisement(loggedCustomer, "read")) {
	                response.sendRedirect("/Cab_It/error/no-access.jsp");
	            }
	        }
	        else if(session.getAttribute("logged-employee") != null) {
	            Employee loggedEmployee = (Employee) session.getAttribute("logged-employee");
	
	            if (!accessPrivilegeHelper.checkAccessPrivilegesForAdvertisement(loggedEmployee, "read")) {
	                response.sendRedirect("/Cab_It/error/no-access.jsp");
	            }
	        }
	        else
	            return;
	    
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"head-te\">\r\n");
      out.write("\t         <h2>Find an advertisement here</h2>\r\n");
      out.write("        \r\n");
      out.write("\t    ");

	        Object advertisementRegisterStatus = session.getAttribute("advertisement-register-status");
	        Object advertisementUpdateStatus = session.getAttribute("advertisement-update-status");
	        Object advertisementDeleteStatus = session.getAttribute("advertisement-delete-status");
	
	        if(advertisementRegisterStatus != null)
	        {
	            if(advertisementRegisterStatus.toString().equals("success"))
	            {
                    out.println("<font color='blue'>");
                	out.println("<br><h4>Advertisement Registered Successfully!</h4>");
	                out.println("</font>");
	            }
	            session.removeAttribute("advertisement-register-status");
	        }
	        else if(advertisementUpdateStatus != null)
	        {
	            if(advertisementUpdateStatus.toString().equals("success"))
	            {
	                out.println("<font color='blue'>");
	                out.println("<br><h4>Advertisement Updated Successfully!</h4>");
	                out.println("</font>");
	            }
	            session.removeAttribute("advertisement-update-status");
	        }
	
	        else if(advertisementDeleteStatus != null)
	        {
	            if(advertisementDeleteStatus.toString().equals("success"))
	            {
		                out.println("<font color='blue'>");
		                out.println("<br><h4>Advertisement Deleted Successfully!</h4>");
	            }
	
	            else if(advertisementDeleteStatus.toString().equals("invalid"))
	            {
            	    	out.println("<font color='red'>");
         	       		out.println("<br><h4>Advertisement in-use or unable to delete</h4>");
	            }
	            	out.println("</font>");
	            out.println("</div>");
	            session.removeAttribute("advertisement-delete-status");
	        }
	    
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"main-container\">\r\n");
      out.write("\t         <form action=\"/Cab_It/fetch/advertisement\" method=\"POST\">\r\n");
      out.write("                 <input type=\"text\" placeholder=\"Advertisement-ID..\" name=\"advertisement-id\"\">\r\n");
      out.write("             \t<button type=\"submit\" >Search</button>\r\n");
      out.write("             </form>\r\n");
      out.write("             \r\n");
      out.write("             <form action=\"/Cab_It/dashboard\">\r\n");
      out.write("                 <input type=\"submit\" value=\"Dashboard\" id=\"signup-btn-1\">\r\n");
      out.write("             </form>\r\n");
      out.write("             \r\n");
      out.write("           <br>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\t    ");

	        Object fetchResult = session.getAttribute("advertisement-fetch-result");
	
	        if(fetchResult != null)
	        {
	            if (!fetchResult.toString().equals("not-found"))
	            {
	                List<Advertisement> advertisements = (List<Advertisement>) session.getAttribute("advertisement-fetch-result");
	
	                String titleTemplate = "<h3>%s</h3>";
	                String fieldTemplate = "<p><b>%s</b> : %s </p>";
	                String hyperlinkTemplate = "<a href='%s'>%s</a>";
	                String imageTemplate = "<img src='%s'><br>";
	
	                for(Advertisement advertisement : advertisements)
	                {
	                    String id = advertisement.getId();
	                    String content = advertisement.getContent();
	                    String photoUrl = "data:image/jpg;base64," + Base64.getEncoder().encodeToString(advertisement.getPhoto());
						
	                    out.println("<div class='row'>");
	                    	out.println("<div class='column'>");
	                    		out.println("<div class='card'>");
	                    			out.println("<div class='image-btn'>");
	                    				out.println(String.format(imageTemplate, photoUrl));
	                    			out.print("</div>");
	                    			
	                    			out.println("<div class='container'>");
	                    				out.println("<div class='content'>");
	                    					out.println(String.format(titleTemplate, id));
	                    					out.println(String.format(fieldTemplate, "Content", content));
	                    				out.print("</div>");
	
	                    if(session.getAttribute("logged-admin") != null) {
	                        out.println(String.format(hyperlinkTemplate, "/Cab_It/update/advertisement?id=".concat(id), "<h4 id='signup-btn-2'>Update</h4>"));
	                        out.println(String.format(hyperlinkTemplate, "/Cab_It/delete/advertisement?id=".concat(id), "<h4 id='signup-btn-3'>Delete</h4>"));
	                    }
	
	                    			out.print("</div>");
	                    		out.print("</div>");
	                    	out.print("</div>");
	                    out.print("</div>");
	                }
	            }
	            else if(fetchResult.toString().equals("not-found"))
	            {
	            	out.println("<center><h3>Advertisement not found!</h3></center>");
	            }
	            session.removeAttribute("advertisement-fetch-result");
	        }
	    
      out.write("\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
