/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.108
 * Generated at: 2021-05-20 09:57:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.location;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cabit.Cab_It.model.Location;
import com.cabit.Cab_It.helper.AccessPrivilegeHelper;
import com.cabit.Cab_It.model.Admin;
import java.util.Enumeration;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t    <title>Update Location</title>\r\n");
      out.write("\t    <meta charset=\"UTF-8\">\r\n");
      out.write("\t    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("\t    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("\t    <link rel=\"stylesheet\" href=\"CSS/style1.css\">\r\n");
      out.write("\t    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("\t    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\t    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">    \r\n");
      out.write("\t    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\t</head>\r\n");
      out.write("    <body>\r\n");
      out.write("\t    ");

	        if(session.getAttribute("logged-admin") == null)
	        {
	            response.sendRedirect("/Cab_It/login");
	            return;
	        }
	        if(session.getAttribute("update-location") == null)
	        {
	            response.sendRedirect("/Cab_It/admin/dashboard");
	            return;
	        }
	        AccessPrivilegeHelper accessPrivilegeHelper = new AccessPrivilegeHelper();
	        Admin loggedAdmin = (Admin) session.getAttribute("logged-admin");
	
	        if (!accessPrivilegeHelper.checkAccessPrivilegesForLocation(loggedAdmin, "update")) {
	            response.sendRedirect("/Cab_It/error/no-access.jsp");
	            return;
	        }
	    
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t    ");

	        Location location = (Location) request.getSession().getAttribute("update-location");
	
	        session.setAttribute("location-id", location.getId());
	    
      out.write("\r\n");
      out.write("\t    \r\n");
      out.write("\t    <div class=\"container\">\r\n");
      out.write("\t    \t<div class=\"head-te\">\r\n");
      out.write("        \t\t<h2>Update Location</h2>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t    \t<div class=\"main-container\">\r\n");
      out.write("\t\t\t    <form action=\"/Cab_It/validation/location/update-validation.jsp\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t       <label for=\"\"> District</label>\r\n");
      out.write("\t\t\t        <select name=\"district\">\r\n");
      out.write("\t\t\t            <option value=\"Colombo\">Colombo</option>\r\n");
      out.write("\t\t\t            <option value=\"Kurunegala\">Kurunegala</option>\r\n");
      out.write("\t\t\t            <option value=\"Kandy\">Kandy</option>\r\n");
      out.write("\t\t\t            <option value=\"Anuradhapura\">Anuradhapura</option>\r\n");
      out.write("\t\t\t            <option value=\"Galle\">Galle</option>\r\n");
      out.write("\t\t\t            <option value=\"Gampaha\">Gampaha</option>\r\n");
      out.write("\t\t\t            <option value=\"Kegalle\">Kegalle</option>\r\n");
      out.write("\t\t\t            <option value=\"Nuwara Eliya\">Nuwara Eliya</option>\r\n");
      out.write("\t\t\t        </select>\r\n");
      out.write("\t\t\t        <br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t        <label for=\"\">Zone</label>\r\n");
      out.write("\t\t\t        \r\n");
      out.write("\t\t\t        <input\r\n");
      out.write("\t\t\t                type=\"text\"\r\n");
      out.write("\t\t\t                name=\"zone\"\r\n");
      out.write("\t\t\t                value=");
      out.print( session.getAttribute("prev-zone") == null ? location.getZone() : session.getAttribute("prev-zone") );
      out.write(">\r\n");
      out.write("\t\t\t                <font color=\"red\">\r\n");
      out.write("\t\t\t                    ");
      out.print( session.getAttribute("zone-invalidation") == null ? "" : session.getAttribute("zone-invalidation") );
      out.write("\r\n");
      out.write("\t\t\t                </font>\r\n");
      out.write("\t\t\t        <br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t        <input type=\"submit\" value=\"Update\" id=\"signup-btn\">\r\n");
      out.write("\t\t\t    </form>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    <form action=\"/Cab_It/dashboard\">\r\n");
      out.write("\t\t\t        <input type=\"submit\" value=\"Dashboard\" id=\"signup-btn-1\">\r\n");
      out.write("\t\t\t    </form>\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

		   Enumeration<String> sessionAttributes =  session.getAttributeNames();
		
		    while (sessionAttributes.hasMoreElements())
		    {
		        String element = sessionAttributes.nextElement();
		
		        if(element.endsWith("invalidation") || element.startsWith("prev"))
		            session.removeAttribute(element);
		    }
	   	
      out.write("\r\n");
      out.write("    \t\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
